Quickstart
==========

This document provides a high-level overview of how to use this package. This
guide will cover:

 * :ref:`recipe`
 * :ref:`step`
 * :ref:`package`


.. _recipe:

Recipe
------

Every time you use this package, you will begin and end with a ``Recipe``. The recipe
acts as a container, which isolates the package from your regular file-system,
and isolates each step from each other. This is accomplished through liberal use
of temporary directories. The isolation allows the recipe to handle the artifacts
involved in each step in an object-oriented fashion, improving reproducibility.

.. note::
    The use of temporary directories means that everything generated by a recipe
    will be discarded at the end, unless otherwise indicated by the user in the
    ``keep`` parameter of the Recipe.

The :py:class:`~data_as_code.recipe.Recipe` can be managed with a context handler:

.. code-block:: python

    from data_as_code import Recipe, premade

    with Recipe('data_package') as r:
        data = premade.source_http(r, 'https://en.wikipedia.org/wiki/Data')

or with an equivalent call to begin/end:

.. code-block:: python

    from data_as_code import Recipe, premade

    r = Recipe('data_package')
    r.begin()
    data = premade.source_http(r, 'https://en.wikipedia.org/wiki/Data')
    r.end()

.. note::
    This document will use a context handler for clarity, but use of begin/end
    is equivalent, and very useful during the initial development of a recipe,
    as it will keep your workspace open between commands.

.. py:module:: data_as_code
.. autoclass:: Recipe
    :members:


.. _step:

Step
------

.. _package:

Package
-------
